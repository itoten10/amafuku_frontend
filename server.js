#!/usr/bin/env node

/**
 * Azure App ServiceÁî®„ÅÆ„Ç∑„É≥„Éó„É´„Å™Next.js„Çµ„Éº„Éê„ÉºËµ∑Âãï„Çπ„ÇØ„É™„Éó„Éà
 * next„Ç≥„Éû„É≥„Éâ„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂïèÈ°å„ÇíÂõûÈÅø
 */

const { spawn } = require('child_process');
const path = require('path');

// „Éù„Éº„ÉàË®≠ÂÆöÔºàAzureÁí∞Â¢ÉÂ§âÊï∞„Åæ„Åü„ÅØ„Éá„Éï„Ç©„É´„ÉàÔºâ
const port = process.env.PORT || 3000;

console.log('üöÄ Starting Famoly Drive Next.js server...');
console.log(`üì¶ Current directory: ${process.cwd()}`);
console.log(`üîå Port: ${port}`);

// next„Ç≥„Éû„É≥„Éâ„ÅÆÂÆüË°å„Éë„Çπ„ÇíÊòéÁ§∫ÁöÑ„Å´ÊåáÂÆöÔºàAzure„ÅÆ„Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØÂØæÂøúÔºâ
const possiblePaths = [
  path.join(__dirname, 'node_modules', 'next', 'dist', 'bin', 'next'),
  path.join('/node_modules', 'next', 'dist', 'bin', 'next'),
  path.join(__dirname, '_del_node_modules', 'next', 'dist', 'bin', 'next')
];

// Â≠òÂú®„Åô„Çã„Éë„Çπ„ÇíË¶ã„Å§„Åë„Çã
let nextPath = null;
for (const p of possiblePaths) {
  try {
    if (require('fs').existsSync(p)) {
      nextPath = p;
      console.log(`‚úÖ Found Next.js at: ${p}`);
      break;
    }
  } catch (e) {
    // Continue to next path
  }
}

if (!nextPath) {
  console.error('‚ùå Could not find Next.js binary!');
  console.error('Searched paths:', possiblePaths);
  process.exit(1);
}

// next„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å
const nextProcess = spawn('node', [nextPath, 'start', '-p', port], {
  stdio: 'inherit',
  env: { ...process.env, PORT: port }
});

nextProcess.on('error', (err) => {
  console.error('‚ùå Failed to start Next.js server:', err);
  process.exit(1);
});

nextProcess.on('exit', (code) => {
  if (code !== 0) {
    console.error(`‚ùå Next.js server exited with code ${code}`);
  }
  process.exit(code);
});

// „Ç∞„É¨„Éº„Çπ„Éï„É´„Ç∑„É£„ÉÉ„Éà„ÉÄ„Ç¶„É≥
process.on('SIGTERM', () => {
  console.log('‚ö†Ô∏è SIGTERM received, shutting down gracefully...');
  nextProcess.kill('SIGTERM');
});

process.on('SIGINT', () => {
  console.log('‚ö†Ô∏è SIGINT received, shutting down gracefully...');
  nextProcess.kill('SIGINT');
});